{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/components/ApiKeyValidator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiKeyValidator = ({\n  apiKey\n}) => {\n  _s();\n  const [valid, setValid] = useState(null);\n  const validateApiKey = async () => {\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/models\", {\n        headers: {\n          Authorization: `Bearer ${apiKey}`\n        }\n      });\n      setValid(response.ok ? \"Valid\" : \"Invalid\");\n    } catch {\n      setValid(\"Invalid\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validateApiKey,\n      children: \"Check API Key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), valid && /*#__PURE__*/_jsxDEV(Typography, {\n      children: [valid, \" API Key\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiKeyValidator, \"3rUo8EaVbY6qDKQf5adOGfLtgfU=\");\n_c = ApiKeyValidator;\nexport default ApiKeyValidator;\nvar _c;\n$RefreshReg$(_c, \"ApiKeyValidator\");","map":{"version":3,"names":["React","useState","Button","Typography","jsxDEV","_jsxDEV","ApiKeyValidator","apiKey","_s","valid","setValid","validateApiKey","response","fetch","headers","Authorization","ok","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/components/ApiKeyValidator.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Typography } from \"@mui/material\";\n\ninterface Props {\n  apiKey: string;\n}\n\nconst ApiKeyValidator: React.FC<Props> = ({ apiKey }) => {\n  const [valid, setValid] = useState<string | null>(null);\n\n  const validateApiKey = async () => {\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/models\", {\n        headers: {\n          Authorization: `Bearer ${apiKey}`,\n        },\n      });\n\n      setValid(response.ok ? \"Valid\" : \"Invalid\");\n    } catch {\n      setValid(\"Invalid\");\n    }\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={validateApiKey}>\n        Check API Key\n      </Button>\n      {valid && <Typography>{valid} API Key</Typography>}\n    </div>\n  );\n};\n\nexport default ApiKeyValidator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnD,MAAMC,eAAgC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUR,MAAM;QACjC;MACF,CAAC,CAAC;MAEFG,QAAQ,CAACE,QAAQ,CAACI,EAAE,GAAG,OAAO,GAAG,SAAS,CAAC;IAC7C,CAAC,CAAC,MAAM;MACNN,QAAQ,CAAC,SAAS,CAAC;IACrB;EACF,CAAC;EAED,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA,CAACH,MAAM;MAACgB,OAAO,EAAC,WAAW;MAACC,OAAO,EAAER,cAAe;MAAAM,QAAA,EAAC;IAErD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRd,KAAK,iBAAIJ,OAAA,CAACF,UAAU;MAAAc,QAAA,GAAER,KAAK,EAAC,UAAQ;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBIF,eAAgC;AAAAkB,EAAA,GAAhClB,eAAgC;AA2BtC,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}