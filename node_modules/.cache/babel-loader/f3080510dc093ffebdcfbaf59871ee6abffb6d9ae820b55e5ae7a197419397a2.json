{"ast":null,"code":"export const translateSrt = async (apiKey, content, language) => {\n  var _result$choices, _result$choices$;\n  const response = await fetch('https://api.openai.com/v1/completions', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${apiKey}`\n    },\n    body: JSON.stringify({\n      model: 'text-davinci-003',\n      prompt: `Translate the following SRT content into ${language}:\\n${content}`,\n      max_tokens: 4096,\n      temperature: 0.2\n    })\n  });\n  const result = await response.json();\n  return (result === null || result === void 0 ? void 0 : (_result$choices = result.choices) === null || _result$choices === void 0 ? void 0 : (_result$choices$ = _result$choices[0]) === null || _result$choices$ === void 0 ? void 0 : _result$choices$.text) || '';\n};","map":{"version":3,"names":["translateSrt","apiKey","content","language","_result$choices","_result$choices$","response","fetch","method","headers","Authorization","body","JSON","stringify","model","prompt","max_tokens","temperature","result","json","choices","text"],"sources":["/home/user/srt-translator/src/utils/translateSrt.ts"],"sourcesContent":["export const translateSrt = async (\n  apiKey: string, \n  content: string, \n  language: string\n) => {\n  const response = await fetch('https://api.openai.com/v1/completions', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${apiKey}`,\n    },\n    body: JSON.stringify({\n      model: 'text-davinci-003',\n      prompt: `Translate the following SRT content into ${language}:\\n${content}`,\n      max_tokens: 4096,\n      temperature: 0.2,\n    }),\n  });\n\n  const result = await response.json();\n  return result?.choices?.[0]?.text || '';\n};\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAAA,CAC1BC,MAAc,EACdC,OAAe,EACfC,QAAgB,KACb;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;IACpEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUT,MAAM;IACjC,CAAC;IACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAE,4CAA4CZ,QAAQ,MAAMD,OAAO,EAAE;MAC3Ec,UAAU,EAAE,IAAI;MAChBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;EACpC,OAAO,CAAAD,MAAM,aAANA,MAAM,wBAAAd,eAAA,GAANc,MAAM,CAAEE,OAAO,cAAAhB,eAAA,wBAAAC,gBAAA,GAAfD,eAAA,CAAkB,CAAC,CAAC,cAAAC,gBAAA,uBAApBA,gBAAA,CAAsBgB,IAAI,KAAI,EAAE;AACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}