{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/components/ApiKeyValidator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiKeyValidator = ({\n  apiKey\n}) => {\n  _s();\n  const [valid, setValid] = useState(null);\n  const validateApiKey = async () => {\n    try {\n      const response = await fetch(\"https://api.anthropic.com/v1/messages\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': apiKey,\n          'anthropic-version': '2023-06-01'\n        },\n        body: JSON.stringify({\n          model: 'claude-3-sonnet-20240229',\n          max_tokens: 1,\n          messages: [{\n            role: 'user',\n            content: 'Hello'\n          }]\n        })\n      });\n      setValid(response.ok ? \"Valid\" : \"Invalid\");\n    } catch {\n      setValid(\"Invalid\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validateApiKey,\n      disabled: !apiKey,\n      children: \"Check API Key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), valid && /*#__PURE__*/_jsxDEV(Typography, {\n      color: valid === \"Valid\" ? \"success.main\" : \"error.main\",\n      sx: {\n        mt: 1\n      },\n      children: [valid, \" API Key\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiKeyValidator, \"3rUo8EaVbY6qDKQf5adOGfLtgfU=\");\n_c = ApiKeyValidator;\nexport default ApiKeyValidator;\nvar _c;\n$RefreshReg$(_c, \"ApiKeyValidator\");","map":{"version":3,"names":["React","useState","Button","Typography","jsxDEV","_jsxDEV","ApiKeyValidator","apiKey","_s","valid","setValid","validateApiKey","response","fetch","method","headers","body","JSON","stringify","model","max_tokens","messages","role","content","ok","children","variant","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","mt","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/components/ApiKeyValidator.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Typography } from \"@mui/material\";\n\ninterface Props {\n  apiKey: string;\n}\n\nconst ApiKeyValidator: React.FC<Props> = ({ apiKey }) => {\n  const [valid, setValid] = useState<string | null>(null);\n\n  const validateApiKey = async () => {\n    try {\n      const response = await fetch(\"https://api.anthropic.com/v1/messages\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': apiKey,\n          'anthropic-version': '2023-06-01'\n        },\n        body: JSON.stringify({\n          model: 'claude-3-sonnet-20240229',\n          max_tokens: 1,\n          messages: [{\n            role: 'user',\n            content: 'Hello'\n          }]\n        })\n      });\n\n      setValid(response.ok ? \"Valid\" : \"Invalid\");\n    } catch {\n      setValid(\"Invalid\");\n    }\n  };\n\n  return (\n    <div>\n      <Button \n        variant=\"contained\" \n        onClick={validateApiKey}\n        disabled={!apiKey}\n      >\n        Check API Key\n      </Button>\n      {valid && (\n        <Typography \n          color={valid === \"Valid\" ? \"success.main\" : \"error.main\"}\n          sx={{ mt: 1 }}\n        >\n          {valid} API Key\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default ApiKeyValidator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnD,MAAMC,eAAgC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,WAAW,EAAER,MAAM;UACnB,mBAAmB,EAAE;QACvB,CAAC;QACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE,0BAA0B;UACjCC,UAAU,EAAE,CAAC;UACbC,QAAQ,EAAE,CAAC;YACTC,IAAI,EAAE,MAAM;YACZC,OAAO,EAAE;UACX,CAAC;QACH,CAAC;MACH,CAAC,CAAC;MAEFb,QAAQ,CAACE,QAAQ,CAACY,EAAE,GAAG,OAAO,GAAG,SAAS,CAAC;IAC7C,CAAC,CAAC,MAAM;MACNd,QAAQ,CAAC,SAAS,CAAC;IACrB;EACF,CAAC;EAED,oBACEL,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACH,MAAM;MACLwB,OAAO,EAAC,WAAW;MACnBC,OAAO,EAAEhB,cAAe;MACxBiB,QAAQ,EAAE,CAACrB,MAAO;MAAAkB,QAAA,EACnB;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRvB,KAAK,iBACJJ,OAAA,CAACF,UAAU;MACT8B,KAAK,EAAExB,KAAK,KAAK,OAAO,GAAG,cAAc,GAAG,YAAa;MACzDyB,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAV,QAAA,GAEbhB,KAAK,EAAC,UACT;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/CIF,eAAgC;AAAA8B,EAAA,GAAhC9B,eAAgC;AAiDtC,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}