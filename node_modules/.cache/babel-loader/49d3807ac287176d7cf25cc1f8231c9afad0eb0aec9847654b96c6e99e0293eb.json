{"ast":null,"code":"export const translateSrt = async (srtContent, targetLanguage, apiKey) => {\n  const openAiUrl = \"https://api.openai.com/v1/completions\";\n  const response = await fetch(openAiUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${apiKey}`\n    },\n    body: JSON.stringify({\n      model: \"text-davinci-003\",\n      prompt: `Translate the following subtitles to ${targetLanguage}:\\n${srtContent}`,\n      max_tokens: 4000\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to translate subtitles\");\n  }\n  const data = await response.json();\n  return data.choices[0].text;\n};","map":{"version":3,"names":["translateSrt","srtContent","targetLanguage","apiKey","openAiUrl","response","fetch","method","headers","Authorization","body","JSON","stringify","model","prompt","max_tokens","ok","Error","data","json","choices","text"],"sources":["/home/user/srt-translator/src/utils/translateSrt.ts"],"sourcesContent":["export const translateSrt = async (\n    srtContent: string,\n    targetLanguage: string,\n    apiKey: string\n  ): Promise<string> => {\n    const openAiUrl = \"https://api.openai.com/v1/completions\";\n  \n    const response = await fetch(openAiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({\n        model: \"text-davinci-003\",\n        prompt: `Translate the following subtitles to ${targetLanguage}:\\n${srtContent}`,\n        max_tokens: 4000,\n      }),\n    });\n  \n    if (!response.ok) {\n      throw new Error(\"Failed to translate subtitles\");\n    }\n  \n    const data = await response.json();\n    return data.choices[0].text;\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAAA,CACxBC,UAAkB,EAClBC,cAAsB,EACtBC,MAAc,KACM;EACpB,MAAMC,SAAS,GAAG,uCAAuC;EAEzD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAS,EAAE;IACtCG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUN,MAAM;IACjC,CAAC;IACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAE,wCAAwCZ,cAAc,MAAMD,UAAU,EAAE;MAChFc,UAAU,EAAE;IACd,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;EAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}