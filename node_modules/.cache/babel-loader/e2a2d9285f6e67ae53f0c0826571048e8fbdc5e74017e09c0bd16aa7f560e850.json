{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/components/FileUploader.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onFileSelect\n}) => {\n  _s();\n  const [fileName, setFileName] = useState(\"\");\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      onFileSelect(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Drag and Drop or Upload SRT File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".srt\",\n      onChange: handleFileChange,\n      style: {\n        display: \"block\",\n        margin: \"10px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), fileName && /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Selected File: \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"qmgMVFP5VOwUOxztcZ5P9gagwnE=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","Box","Typography","jsxDEV","_jsxDEV","FileUploader","onFileSelect","_s","fileName","setFileName","handleFileChange","event","target","files","file","name","children","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","display","margin","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/components/FileUploader.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\n\ninterface Props {\n  onFileSelect: (file: File) => void;\n}\n\nconst FileUploader: React.FC<Props> = ({ onFileSelect }) => {\n  const [fileName, setFileName] = useState(\"\");\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      onFileSelect(file);\n    }\n  };\n\n  return (\n    <Box>\n      <Typography>Drag and Drop or Upload SRT File</Typography>\n      <input\n        type=\"file\"\n        accept=\".srt\"\n        onChange={handleFileChange}\n        style={{ display: \"block\", margin: \"10px 0\" }}\n      />\n      {fileName && <Typography>Selected File: {fileName}</Typography>}\n    </Box>\n  );\n};\n\nexport default FileUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhD,MAAMC,YAA6B,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,gBAAgB,GAAIC,KAA0C,IAAK;IACvE,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/C,MAAMC,IAAI,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClCJ,WAAW,CAACK,IAAI,CAACC,IAAI,CAAC;MACtBT,YAAY,CAACQ,IAAI,CAAC;IACpB;EACF,CAAC;EAED,oBACEV,OAAA,CAACH,GAAG;IAAAe,QAAA,gBACFZ,OAAA,CAACF,UAAU;MAAAc,QAAA,EAAC;IAAgC;MAAAR,QAAA,EAAAS,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACzDf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,MAAM;MACbC,QAAQ,EAAEZ,gBAAiB;MAC3Ba,KAAK,EAAE;QAAEC,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAS;IAAE;MAAAjB,QAAA,EAAAS,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,EACDX,QAAQ,iBAAIJ,OAAA,CAACF,UAAU;MAAAc,QAAA,GAAC,iBAAe,EAACR,QAAQ;IAAA;MAAAA,QAAA,EAAAS,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAX,QAAA,EAAAS,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACZ,EAAA,CAvBIF,YAA6B;AAAAqB,EAAA,GAA7BrB,YAA6B;AAyBnC,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}