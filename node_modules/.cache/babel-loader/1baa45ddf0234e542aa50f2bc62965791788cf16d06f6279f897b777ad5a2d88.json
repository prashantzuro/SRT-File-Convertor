{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/components/FileUploader.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onFileSelect\n}) => {\n  _s();\n  const [fileName, setFileName] = useState(\"\");\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      onFileSelect(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Upload SRT File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".srt\",\n        onChange: handleFileChange,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), fileName && /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Selected File: \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"qmgMVFP5VOwUOxztcZ5P9gagwnE=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","Box","Typography","Button","jsxDEV","_jsxDEV","FileUploader","onFileSelect","_s","fileName","setFileName","handleFileChange","event","target","files","file","name","children","variant","_jsxFileName","lineNumber","columnNumber","component","type","accept","onChange","hidden","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/components/FileUploader.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Typography, Button } from \"@mui/material\";\n\ninterface Props {\n  onFileSelect: (file: File) => void;\n}\n\nconst FileUploader: React.FC<Props> = ({ onFileSelect }) => {\n  const [fileName, setFileName] = useState(\"\");\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      onFileSelect(file);\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h6\">Upload SRT File</Typography>\n      <Button variant=\"contained\" component=\"label\">\n        Choose File\n        <input\n          type=\"file\"\n          accept=\".srt\"\n          onChange={handleFileChange}\n          hidden\n        />\n      </Button>\n      {fileName && <Typography>Selected File: {fileName}</Typography>}\n    </Box>\n  );\n};\n\nexport default FileUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxD,MAAMC,YAA6B,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,gBAAgB,GAAIC,KAA0C,IAAK;IACvE,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/C,MAAMC,IAAI,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClCJ,WAAW,CAACK,IAAI,CAACC,IAAI,CAAC;MACtBT,YAAY,CAACQ,IAAI,CAAC;IACpB;EACF,CAAC;EAED,oBACEV,OAAA,CAACJ,GAAG;IAAAgB,QAAA,gBACFZ,OAAA,CAACH,UAAU;MAACgB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAe;MAAAR,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACrDhB,OAAA,CAACF,MAAM;MAACe,OAAO,EAAC,WAAW;MAACI,SAAS,EAAC,OAAO;MAAAL,QAAA,GAAC,aAE5C,eAAAZ,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,MAAM;QACbC,QAAQ,EAAEd,gBAAiB;QAC3Be,MAAM;MAAA;QAAAjB,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAZ,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EACRZ,QAAQ,iBAAIJ,OAAA,CAACH,UAAU;MAAAe,QAAA,GAAC,iBAAe,EAACR,QAAQ;IAAA;MAAAA,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAZ,QAAA,EAAAU,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACb,EAAA,CA1BIF,YAA6B;AAAAqB,EAAA,GAA7BrB,YAA6B;AA4BnC,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}