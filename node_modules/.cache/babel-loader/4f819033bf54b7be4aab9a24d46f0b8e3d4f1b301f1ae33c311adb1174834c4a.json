{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/components/ApiKeyValidator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Typography } from \"@mui/material\";\nimport Anthropic from '@anthropic-ai/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiKeyValidator = ({\n  apiKey\n}) => {\n  _s();\n  const [valid, setValid] = useState(null);\n  const validateApiKey = async () => {\n    try {\n      const anthropic = new Anthropic({\n        apiKey: apiKey\n      });\n\n      // Make a test request\n      await anthropic.messages.create({\n        max_tokens: 1,\n        messages: [{\n          role: 'user',\n          content: 'Hello'\n        }],\n        model: 'claude-3-sonnet-20240229'\n      });\n      setValid(\"Valid\");\n    } catch (error) {\n      setValid(\"Invalid\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validateApiKey,\n      disabled: !apiKey,\n      children: \"Check API Key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), valid && /*#__PURE__*/_jsxDEV(Typography, {\n      color: valid === \"Valid\" ? \"success.main\" : \"error.main\",\n      sx: {\n        mt: 1\n      },\n      children: [valid, \" API Key\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiKeyValidator, \"3rUo8EaVbY6qDKQf5adOGfLtgfU=\");\n_c = ApiKeyValidator;\nexport default ApiKeyValidator;\nvar _c;\n$RefreshReg$(_c, \"ApiKeyValidator\");","map":{"version":3,"names":["React","useState","Button","Typography","Anthropic","jsxDEV","_jsxDEV","ApiKeyValidator","apiKey","_s","valid","setValid","validateApiKey","anthropic","messages","create","max_tokens","role","content","model","error","children","variant","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","mt","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/components/ApiKeyValidator.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Typography } from \"@mui/material\";\nimport Anthropic from '@anthropic-ai/sdk';\n\ninterface Props {\n  apiKey: string;\n}\n\nconst ApiKeyValidator: React.FC<Props> = ({ apiKey }) => {\n  const [valid, setValid] = useState<string | null>(null);\n\n  const validateApiKey = async () => {\n    try {\n      const anthropic = new Anthropic({\n        apiKey: apiKey,\n      });\n\n      // Make a test request\n      await anthropic.messages.create({\n        max_tokens: 1,\n        messages: [{ role: 'user', content: 'Hello' }],\n        model: 'claude-3-sonnet-20240229',\n      });\n\n      setValid(\"Valid\");\n    } catch (error) {\n      setValid(\"Invalid\");\n    }\n  };\n\n  return (\n    <div>\n      <Button \n        variant=\"contained\" \n        onClick={validateApiKey}\n        disabled={!apiKey}\n      >\n        Check API Key\n      </Button>\n      {valid && (\n        <Typography \n          color={valid === \"Valid\" ? \"success.main\" : \"error.main\"}\n          sx={{ mt: 1 }}\n        >\n          {valid} API Key\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default ApiKeyValidator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAClD,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1C,MAAMC,eAAgC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,SAAS,GAAG,IAAIT,SAAS,CAAC;QAC9BI,MAAM,EAAEA;MACV,CAAC,CAAC;;MAEF;MACA,MAAMK,SAAS,CAACC,QAAQ,CAACC,MAAM,CAAC;QAC9BC,UAAU,EAAE,CAAC;QACbF,QAAQ,EAAE,CAAC;UAAEG,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAE;QAAQ,CAAC,CAAC;QAC9CC,KAAK,EAAE;MACT,CAAC,CAAC;MAEFR,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdT,QAAQ,CAAC,SAAS,CAAC;IACrB;EACF,CAAC;EAED,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACJ,MAAM;MACLoB,OAAO,EAAC,WAAW;MACnBC,OAAO,EAAEX,cAAe;MACxBY,QAAQ,EAAE,CAAChB,MAAO;MAAAa,QAAA,EACnB;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRlB,KAAK,iBACJJ,OAAA,CAACH,UAAU;MACT0B,KAAK,EAAEnB,KAAK,KAAK,OAAO,GAAG,cAAc,GAAG,YAAa;MACzDoB,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAV,QAAA,GAEbX,KAAK,EAAC,UACT;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAzCIF,eAAgC;AAAAyB,EAAA,GAAhCzB,eAAgC;AA2CtC,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}