{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Alert, CircularProgress } from \"@mui/material\";\nimport FileUploader from \"./components/FileUploader\";\nimport LanguageSelector from \"./components/LanguageSelector\";\nimport { translateSrt } from \"./utils/translateSrt\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [apiKey, setApiKey] = useState(\"\");\n  const [language, setLanguage] = useState(\"fr\"); // Use language code\n  const [fileContent, setFileContent] = useState(null);\n  const [translatedText, setTranslatedText] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false); // New loading state\n\n  const handleFileUpload = async file => {\n    if (!file) {\n      setError(\"No file selected.\");\n      return;\n    }\n    try {\n      const content = await file.text();\n      setFileContent(content);\n      setError(\"\"); // Clear any previous error\n    } catch (err) {\n      setError(\"Failed to read file content.\");\n    }\n  };\n  const handleTranslation = async () => {\n    setError(\"\");\n    setTranslatedText(null);\n    if (!fileContent) {\n      setError(\"No file uploaded for translation.\");\n      return;\n    }\n    setLoading(true); // Start loading\n    try {\n      const translated = await translateSrt(fileContent, apiKey, language);\n      if (!translated) {\n        throw new Error(\"Empty translation result.\");\n      }\n      setTranslatedText(translated);\n    } catch (err) {\n      setError(\"Translation failed. Please try again.\");\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"SRT Translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onFileSelect: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), fileContent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Extracted File Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          maxHeight: 200,\n          overflowY: \"auto\",\n          background: \"#f0f0f0\",\n          padding: 10\n        },\n        children: fileContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"OpenAI API Key\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: apiKey,\n      onChange: e => setApiKey(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {\n      language: language,\n      setLanguage: setLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleTranslation,\n      style: {\n        marginTop: 20\n      },\n      disabled: loading // Disable during loading\n      ,\n      fullWidth: true,\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24,\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }, this) : \"Translate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      style: {\n        marginTop: 20\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), translatedText && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          marginTop: 20\n        },\n        children: \"Translated Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          maxHeight: 200,\n          overflowY: \"auto\",\n          background: \"#f0f0f0\",\n          padding: 10\n        },\n        children: translatedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/Q9MJVAbO8dssDk/tqsYLk/PLIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Alert","CircularProgress","FileUploader","LanguageSelector","translateSrt","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","apiKey","setApiKey","language","setLanguage","fileContent","setFileContent","translatedText","setTranslatedText","error","setError","loading","setLoading","handleFileUpload","file","content","text","err","handleTranslation","translated","Error","style","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","maxHeight","overflowY","background","label","fullWidth","margin","value","onChange","e","target","color","onClick","marginTop","disabled","size","severity","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Typography, Alert, CircularProgress } from \"@mui/material\";\nimport FileUploader from \"./components/FileUploader\";\nimport LanguageSelector from \"./components/LanguageSelector\";\nimport { translateSrt } from \"./utils/translateSrt\";\n\nconst App = () => {\n  const [apiKey, setApiKey] = useState(\"\");\n  const [language, setLanguage] = useState(\"fr\"); // Use language code\n  const [fileContent, setFileContent] = useState<string | null>(null);\n  const [translatedText, setTranslatedText] = useState<string | null>(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false); // New loading state\n\n  const handleFileUpload = async (file: File | null) => {\n    if (!file) {\n      setError(\"No file selected.\");\n      return;\n    }\n    try {\n      const content = await file.text();\n      setFileContent(content);\n      setError(\"\"); // Clear any previous error\n    } catch (err) {\n      setError(\"Failed to read file content.\");\n    }\n  };\n\n  const handleTranslation = async () => {\n    setError(\"\");\n    setTranslatedText(null);\n    if (!fileContent) {\n      setError(\"No file uploaded for translation.\");\n      return;\n    }\n\n    setLoading(true); // Start loading\n    try {\n      const translated = await translateSrt(fileContent, apiKey, language);\n      if (!translated) {\n        throw new Error(\"Empty translation result.\");\n      }\n      setTranslatedText(translated);\n    } catch (err) {\n      setError(\"Translation failed. Please try again.\");\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        SRT Translator\n      </Typography>\n      <FileUploader onFileSelect={handleFileUpload} />\n      {fileContent && (\n        <>\n          <Typography variant=\"h6\">Extracted File Content:</Typography>\n          <pre style={{ maxHeight: 200, overflowY: \"auto\", background: \"#f0f0f0\", padding: 10 }}>\n            {fileContent}\n          </pre>\n        </>\n      )}\n\n      <TextField\n        label=\"OpenAI API Key\"\n        fullWidth\n        margin=\"normal\"\n        value={apiKey}\n        onChange={(e) => setApiKey(e.target.value)}\n      />\n\n      <LanguageSelector language={language} setLanguage={setLanguage} />\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleTranslation}\n        style={{ marginTop: 20 }}\n        disabled={loading} // Disable during loading\n        fullWidth\n      >\n        {loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Translate\"}\n      </Button>\n\n      {error && (\n        <Alert severity=\"error\" style={{ marginTop: 20 }}>\n          {error}\n        </Alert>\n      )}\n\n      {translatedText && (\n        <>\n          <Typography variant=\"h6\" style={{ marginTop: 20 }}>\n            Translated Text:\n          </Typography>\n          <pre style={{ maxHeight: 200, overflowY: \"auto\", background: \"#f0f0f0\", padding: 10 }}>\n            {translatedText}\n          </pre>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}