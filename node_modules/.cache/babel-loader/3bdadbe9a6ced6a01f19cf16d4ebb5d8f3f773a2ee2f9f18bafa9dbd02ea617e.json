{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/App.tsx\",\n  _s = $RefreshSig$();\n// App.tsx\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Alert, CircularProgress } from \"@mui/material\";\nimport FileUploader from \"./components/FileUploader\";\nimport LanguageSelector from \"./components/LanguageSelector\";\nimport { translateSrt } from \"./utils/translateSrt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [apiKey, setApiKey] = useState(\"\");\n  const [language, setLanguage] = useState(\"fr\");\n  const [fileContent, setFileContent] = useState(null);\n  const [translatedText, setTranslatedText] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(\"\");\n  const handleFileUpload = async file => {\n    if (!file) {\n      setError(\"No file selected.\");\n      return;\n    }\n    try {\n      const content = await file.text();\n      setFileContent(content);\n    } catch (err) {\n      setError(\"Failed to read file content.\");\n    }\n  };\n  const handleApiKeyCheck = async () => {\n    if (!apiKey.trim()) {\n      setError(\"Please enter an API key\");\n      return;\n    }\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/models\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${apiKey}`\n        }\n      });\n      if (response.ok) {\n        alert(\"API Key is valid!\");\n      } else {\n        var _errorData$error;\n        const errorData = await response.json();\n        throw new Error(((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || \"Invalid API Key\");\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Error checking API key\");\n    }\n  };\n  const handleTranslation = async () => {\n    setError(\"\");\n    setTranslatedText(null);\n    setLoading(true);\n    setProgress(\"\");\n    if (!fileContent) {\n      setError(\"No file uploaded for translation.\");\n      setLoading(false);\n      return;\n    }\n    if (!apiKey) {\n      setError(\"Please enter an API key\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const result = await translateSrt(fileContent, apiKey, language, status => {\n        setProgress(status.message);\n      });\n      setTranslatedText(result);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Translation failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      maxWidth: 800,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"SRT Translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onFileSelect: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"OpenAI API Key\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: apiKey,\n      onChange: e => setApiKey(e.target.value),\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleApiKeyCheck,\n      style: {\n        marginBottom: 20\n      },\n      children: \"Verify API Key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {\n      language: language,\n      setLanguage: setLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleTranslation,\n      disabled: loading,\n      style: {\n        marginTop: 20\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 20\n      }, this) : \"Translate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), progress && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      style: {\n        marginTop: 20\n      },\n      children: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      style: {\n        marginTop: 20\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), fileContent && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Original Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          wordWrap: 'break-word'\n        },\n        children: fileContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), translatedText && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Translated Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          wordWrap: 'break-word'\n        },\n        children: translatedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"autLA7d1ru5sx0NlzlXABY1zOUY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Alert","CircularProgress","FileUploader","LanguageSelector","translateSrt","jsxDEV","_jsxDEV","App","_s","apiKey","setApiKey","language","setLanguage","fileContent","setFileContent","translatedText","setTranslatedText","error","setError","loading","setLoading","progress","setProgress","handleFileUpload","file","content","text","err","handleApiKeyCheck","trim","response","fetch","method","headers","Authorization","ok","alert","_errorData$error","errorData","json","Error","message","handleTranslation","result","status","style","padding","maxWidth","margin","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","label","fullWidth","value","onChange","e","target","type","onClick","marginBottom","disabled","marginTop","size","severity","whiteSpace","wordWrap","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/App.tsx"],"sourcesContent":["// App.tsx\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Alert, CircularProgress } from \"@mui/material\";\nimport FileUploader from \"./components/FileUploader\";\nimport LanguageSelector from \"./components/LanguageSelector\";\nimport { translateSrt, TranslationStatus } from \"./utils/translateSrt\";\n\nconst App = () => {\n  const [apiKey, setApiKey] = useState(\"\");\n  const [language, setLanguage] = useState(\"fr\");\n  const [fileContent, setFileContent] = useState<string | null>(null);\n  const [translatedText, setTranslatedText] = useState<string | null>(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState<string>(\"\");\n\n  const handleFileUpload = async (file: File | null) => {\n    if (!file) {\n      setError(\"No file selected.\");\n      return;\n    }\n    try {\n      const content = await file.text();\n      setFileContent(content);\n    } catch (err) {\n      setError(\"Failed to read file content.\");\n    }\n  };\n\n  const handleApiKeyCheck = async () => {\n    if (!apiKey.trim()) {\n      setError(\"Please enter an API key\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/models\", {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${apiKey}` },\n      });\n      \n      if (response.ok) {\n        alert(\"API Key is valid!\");\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || \"Invalid API Key\");\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Error checking API key\");\n    }\n  };\n\n  const handleTranslation = async () => {\n    setError(\"\");\n    setTranslatedText(null);\n    setLoading(true);\n    setProgress(\"\");\n\n    if (!fileContent) {\n      setError(\"No file uploaded for translation.\");\n      setLoading(false);\n      return;\n    }\n\n    if (!apiKey) {\n      setError(\"Please enter an API key\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const result = await translateSrt(\n        fileContent,\n        apiKey,\n        language,\n        (status: TranslationStatus) => {\n          setProgress(status.message);\n        }\n      );\n\n      setTranslatedText(result);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Translation failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: 20, maxWidth: 800, margin: \"0 auto\" }}>\n      <Typography variant=\"h4\" gutterBottom>SRT Translator</Typography>\n\n      <FileUploader onFileSelect={handleFileUpload} />\n\n      <TextField\n        label=\"OpenAI API Key\"\n        fullWidth\n        margin=\"normal\"\n        value={apiKey}\n        onChange={(e) => setApiKey(e.target.value)}\n        type=\"password\"\n      />\n\n      <Button \n        variant=\"outlined\" \n        onClick={handleApiKeyCheck}\n        style={{ marginBottom: 20 }}\n      >\n        Verify API Key\n      </Button>\n\n      <LanguageSelector language={language} setLanguage={setLanguage} />\n\n      <Button\n        variant=\"contained\"\n        onClick={handleTranslation}\n        disabled={loading}\n        style={{ marginTop: 20 }}\n      >\n        {loading ? <CircularProgress size={24} /> : \"Translate\"}\n      </Button>\n\n      {progress && (\n        <Alert severity=\"info\" style={{ marginTop: 20 }}>\n          {progress}\n        </Alert>\n      )}\n\n      {error && (\n        <Alert severity=\"error\" style={{ marginTop: 20 }}>\n          {error}\n        </Alert>\n      )}\n\n      {fileContent && (\n        <div style={{ marginTop: 20 }}>\n          <Typography variant=\"h6\">Original Content:</Typography>\n          <pre style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}>\n            {fileContent}\n          </pre>\n        </div>\n      )}\n\n      {translatedText && (\n        <div style={{ marginTop: 20 }}>\n          <Typography variant=\"h6\">Translated Content:</Typography>\n          <pre style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}>\n            {translatedText}\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}