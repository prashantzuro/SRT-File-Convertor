{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/components/LanguageSelector.tsx\";\nimport React from \"react\";\nimport { Select, MenuItem, InputLabel, FormControl } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = ({\n  selectedLanguage,\n  onLanguageChange\n}) => /*#__PURE__*/_jsxDEV(FormControl, {\n  fullWidth: true,\n  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n    children: \"Target Language\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Select, {\n    value: selectedLanguage,\n    onChange: e => onLanguageChange(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Spanish\",\n      children: \"Spanish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Italian\",\n      children: \"Italian\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"German\",\n      children: \"German\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"French\",\n      children: \"French\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","Select","MenuItem","InputLabel","FormControl","jsxDEV","_jsxDEV","LanguageSelector","selectedLanguage","onLanguageChange","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/components/LanguageSelector.tsx"],"sourcesContent":["import React from \"react\";\nimport { Select, MenuItem, InputLabel, FormControl } from \"@mui/material\";\n\ninterface Props {\n  selectedLanguage: string;\n  onLanguageChange: (language: string) => void;\n}\n\nconst LanguageSelector: React.FC<Props> = ({ selectedLanguage, onLanguageChange }) => (\n  <FormControl fullWidth>\n    <InputLabel>Target Language</InputLabel>\n    <Select\n      value={selectedLanguage}\n      onChange={(e) => onLanguageChange(e.target.value)}\n    >\n      <MenuItem value=\"Spanish\">Spanish</MenuItem>\n      <MenuItem value=\"Italian\">Italian</MenuItem>\n      <MenuItem value=\"German\">German</MenuItem>\n      <MenuItem value=\"French\">French</MenuItem>\n    </Select>\n  </FormControl>\n);\n\nexport default LanguageSelector;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1E,MAAMC,gBAAiC,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAiB,CAAC,kBAC/EH,OAAA,CAACF,WAAW;EAACM,SAAS;EAAAC,QAAA,gBACpBL,OAAA,CAACH,UAAU;IAAAQ,QAAA,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC,eACxCT,OAAA,CAACL,MAAM;IACLe,KAAK,EAAER,gBAAiB;IACxBS,QAAQ,EAAGC,CAAC,IAAKT,gBAAgB,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAL,QAAA,gBAElDL,OAAA,CAACJ,QAAQ;MAACc,KAAK,EAAC,SAAS;MAAAL,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eAC5CT,OAAA,CAACJ,QAAQ;MAACc,KAAK,EAAC,SAAS;MAAAL,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eAC5CT,OAAA,CAACJ,QAAQ;MAACc,KAAK,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eAC1CT,OAAA,CAACJ,QAAQ;MAACc,KAAK,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACE,CACd;AAACK,EAAA,GAbIb,gBAAiC;AAevC,eAAeA,gBAAgB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}