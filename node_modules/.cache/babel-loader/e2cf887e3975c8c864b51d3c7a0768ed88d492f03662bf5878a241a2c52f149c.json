{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LanguageSelector from './LanguageSelector';\nimport fetchTranslation from './translateSrt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedLanguage, setSelectedLanguage] = useState('fr');\n  const [translation, setTranslation] = useState('');\n  const [error, setError] = useState('');\n  const handleTranslation = async () => {\n    const subtitleText = `\n      1\n      00:00:00,000 --> 00:00:01,500\n      For www.forom.com\n\n      2\n      00:00:01,500 --> 00:00:02,500\n      <i>Tonight's the night.</i>\n\n      3\n      00:00:03,000 --> 00:00:15,000\n      <i>And it's going to happen again and again --</i>\n    `;\n    try {\n      setError('');\n      setTranslation('Starting Translation...');\n      const translatedText = await fetchTranslation(subtitleText, selectedLanguage);\n      setTranslation(translatedText);\n    } catch (err) {\n      setError('Translation failed. Please try again.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SRT Translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {\n      selectedLanguage: selectedLanguage,\n      setSelectedLanguage: setSelectedLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranslation,\n      children: \"Translate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Translated Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: translation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CKdX/daZO9yQxPk0i1DmYg5kF7Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LanguageSelector","fetchTranslation","jsxDEV","_jsxDEV","App","_s","selectedLanguage","setSelectedLanguage","translation","setTranslation","error","setError","handleTranslation","subtitleText","translatedText","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport LanguageSelector from './LanguageSelector';\nimport fetchTranslation from './translateSrt';\n\nconst App = () => {\n  const [selectedLanguage, setSelectedLanguage] = useState<string>('fr');\n  const [translation, setTranslation] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleTranslation = async () => {\n    const subtitleText = `\n      1\n      00:00:00,000 --> 00:00:01,500\n      For www.forom.com\n\n      2\n      00:00:01,500 --> 00:00:02,500\n      <i>Tonight's the night.</i>\n\n      3\n      00:00:03,000 --> 00:00:15,000\n      <i>And it's going to happen again and again --</i>\n    `;\n    \n    try {\n      setError('');\n      setTranslation('Starting Translation...');\n      const translatedText = await fetchTranslation(subtitleText, selectedLanguage);\n      setTranslation(translatedText);\n    } catch (err) {\n      setError('Translation failed. Please try again.');\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h1>SRT Translator</h1>\n      <LanguageSelector selectedLanguage={selectedLanguage} setSelectedLanguage={setSelectedLanguage} />\n      <button onClick={handleTranslation}>Translate</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <div>\n        <h2>Translated Text:</h2>\n        <pre>{translation}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,gBAAgB,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAS,IAAI,CAAC;EACtE,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,YAAY,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IAED,IAAI;MACFF,QAAQ,CAAC,EAAE,CAAC;MACZF,cAAc,CAAC,yBAAyB,CAAC;MACzC,MAAMK,cAAc,GAAG,MAAMb,gBAAgB,CAACY,YAAY,EAAEP,gBAAgB,CAAC;MAC7EG,cAAc,CAACK,cAAc,CAAC;IAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,QAAQ,CAAC,uCAAuC,CAAC;MACjDK,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA,CAACH,gBAAgB;MAACM,gBAAgB,EAAEA,gBAAiB;MAACC,mBAAmB,EAAEA;IAAoB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClGlB,OAAA;MAAQmB,OAAO,EAAEV,iBAAkB;MAAAK,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrDX,KAAK,iBAAIP,OAAA;MAAGoB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBlB,OAAA;QAAAc,QAAA,EAAMT;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CA3CID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA6CT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}