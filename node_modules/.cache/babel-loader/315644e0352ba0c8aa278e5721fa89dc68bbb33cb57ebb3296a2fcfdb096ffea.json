{"ast":null,"code":"var _jsxFileName = \"/home/user/srt-translator/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Typography, Button, Alert } from \"@mui/material\";\nimport FileUploader from \"./components/FileUploader\";\nimport LanguageSelector from \"./components/LanguageSelector\";\nimport { translateSrt } from \"./utils/translateSrt\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [apiKey, setApiKey] = useState(\"\");\n  const [language, setLanguage] = useState(\"fr\"); // Default to French\n  const [fileContent, setFileContent] = useState(null);\n  const [translatedContent, setTranslatedContent] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleFileUpload = async file => {\n    if (!file) {\n      setError(\"No file selected.\");\n      return;\n    }\n    setError(\"\");\n    try {\n      const content = await file.text();\n      setFileContent(content);\n      console.log(\"Extracted File Content:\", content);\n    } catch (err) {\n      setError(\"Failed to read file content.\");\n    }\n  };\n  const handleTranslation = async () => {\n    if (!fileContent) {\n      setError(\"No file uploaded for translation.\");\n      return;\n    }\n    setError(\"\");\n    setLoading(true);\n    try {\n      const result = await translateSrt(fileContent, apiKey, language);\n      if (!result) {\n        throw new Error(\"Translation returned no result.\");\n      }\n      setTranslatedContent(result);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownload = () => {\n    if (!translatedContent) {\n      return;\n    }\n    const blob = new Blob([translatedContent], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"translated.srt\";\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"SRT Translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onFileSelect: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {\n      language: language,\n      setLanguage: setLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      style: {\n        marginTop: 20\n      },\n      onClick: handleTranslation,\n      disabled: loading || !apiKey,\n      children: loading ? \"Translating...\" : \"Translate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), translatedContent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          marginTop: 20\n        },\n        children: \"Translation Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleDownload,\n        children: \"Download Translated File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NSzLqW/iuOqiQTo9HnqzHMWB8Xs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Typography","Button","Alert","FileUploader","LanguageSelector","translateSrt","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","apiKey","setApiKey","language","setLanguage","fileContent","setFileContent","translatedContent","setTranslatedContent","loading","setLoading","error","setError","handleFileUpload","file","content","text","console","log","err","handleTranslation","result","Error","message","handleDownload","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","style","padding","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","marginTop","onClick","disabled","severity","_c","$RefreshReg$"],"sources":["/home/user/srt-translator/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Typography, Button, Alert } from \"@mui/material\";\nimport FileUploader from \"./components/FileUploader\";\nimport LanguageSelector from \"./components/LanguageSelector\";\nimport { translateSrt } from \"./utils/translateSrt\";\n\nconst App = () => {\n  const [apiKey, setApiKey] = useState(\"\");\n  const [language, setLanguage] = useState(\"fr\"); // Default to French\n  const [fileContent, setFileContent] = useState<string | null>(null);\n  const [translatedContent, setTranslatedContent] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleFileUpload = async (file: File | null) => {\n    if (!file) {\n      setError(\"No file selected.\");\n      return;\n    }\n    setError(\"\");\n    try {\n      const content = await file.text();\n      setFileContent(content);\n      console.log(\"Extracted File Content:\", content);\n    } catch (err) {\n      setError(\"Failed to read file content.\");\n    }\n  };\n\n  const handleTranslation = async () => {\n    if (!fileContent) {\n      setError(\"No file uploaded for translation.\");\n      return;\n    }\n    setError(\"\");\n    setLoading(true);\n    try {\n      const result = await translateSrt(fileContent, apiKey, language);\n      if (!result) {\n        throw new Error(\"Translation returned no result.\");\n      }\n      setTranslatedContent(result);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownload = () => {\n    if (!translatedContent) {\n      return;\n    }\n    const blob = new Blob([translatedContent], { type: \"text/plain\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"translated.srt\";\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <Typography variant=\"h4\">SRT Translator</Typography>\n      <FileUploader onFileSelect={handleFileUpload} />\n      <LanguageSelector language={language} setLanguage={setLanguage} />\n      <Button\n        variant=\"contained\"\n        style={{ marginTop: 20 }}\n        onClick={handleTranslation}\n        disabled={loading || !apiKey}\n      >\n        {loading ? \"Translating...\" : \"Translate\"}\n      </Button>\n      {error && <Alert severity=\"error\">{error}</Alert>}\n      {translatedContent && (\n        <>\n          <Typography variant=\"h6\" style={{ marginTop: 20 }}>\n            Translation Completed\n          </Typography>\n          <Button variant=\"contained\" onClick={handleDownload}>\n            Download Translated File\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}